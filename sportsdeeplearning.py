# -*- coding: utf-8 -*-
"""SportsDeepLearning.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/185ThEKsB2wLITZrsTSkox5Biens4kswp
"""

from fastai import *
from fastai.vision import *

folder = 'volley'
file = 'urls_volley.csv'

folder = 'baseball'
file = 'urls_baseball.csv'

folder = 'soccer'
file = 'urls_soccer.csv'

path = Path('data/sports')
dest = path/folder
dest.mkdir(parents=True, exist_ok=True)

classes = ['volley', 'baseball', 'soccer']

download_images(path/file, dest, max_pics=200)

for c in classes:
  print(c)
  verify_images(path/c, delete=True, max_workers=8)

np.random.seed(42)
data = ImageDataBunch.from_folder(path, train='.', valid_pct=0.2, ds_tfms=get_transforms(), size=224, num_workers=4)

data.normalize(imagenet_stats)

data.classes

data.show_batch(rows=4, figsize=(11,15))

learn = cnn_learner(data, models.resnet34, metrics=error_rate)

learn.fit_one_cycle(4)

learn.save('stage-1')

interp = ClassificationInterpretation.from_learner(learn)
interp.plot_confusion_matrix(figsize=(12,12), dpi=60)

learn.unfreeze()

learn.fit_one_cycle(1)

learn.load('stage-1')

learn.lr_find()

learn.recorder.plot()

learn.fit_one_cycle(2, max_lr=slice(3e-3,3e-2))

learn.save('stage-2')

interp = ClassificationInterpretation.from_learner(learn)

interp.plot_confusion_matrix()

from fastai.widgets import *
losses, idxs = interp.top_losses()
top_loss_paths = data.valid_ds.x[idxs]

FileDeleter(help)

learn.export()

defaults.device = torch.device('cpu')

img = open_image(path/'IMG-1167.jpg')

learn = load_learner(path)

pred_class, pred_idx, outputs = learn.predict(img)
pred_class